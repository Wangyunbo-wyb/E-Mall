// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package server

import (
	"context"

	logic2 "Zhihu/application/message/rpc/internal/logic"
	"Zhihu/application/message/rpc/internal/svc"
	service2 "Zhihu/application/message/rpc/service"
)

type ContactServer struct {
	svcCtx *svc.ServiceContext
	service2.UnimplementedContactServer
}

func NewContactServer(svcCtx *svc.ServiceContext) *ContactServer {
	return &ContactServer{
		svcCtx: svcCtx,
	}
}

func (s *ContactServer) CreateMessage(ctx context.Context, in *service2.CreateMessageRequest) (*service2.Empty, error) {
	l := logic2.NewCreateMessageLogic(ctx, s.svcCtx)
	return l.CreateMessage(in)
}

func (s *ContactServer) GetLatestMessage(ctx context.Context, in *service2.GetLatestMessageRequest) (*service2.GetLatestMessageResponse, error) {
	l := logic2.NewGetLatestMessageLogic(ctx, s.svcCtx)
	return l.GetLatestMessage(in)
}

func (s *ContactServer) GetMessageList(ctx context.Context, in *service2.GetMessageListRequest) (*service2.GetMessageListResponse, error) {
	l := logic2.NewGetMessageListLogic(ctx, s.svcCtx)
	return l.GetMessageList(in)
}

func (s *ContactServer) MakeFriends(ctx context.Context, in *service2.MakeFriendsRequest) (*service2.Empty, error) {
	l := logic2.NewMakeFriendsLogic(ctx, s.svcCtx)
	return l.MakeFriends(in)
}

func (s *ContactServer) LoseFriends(ctx context.Context, in *service2.LoseFriendsRequest) (*service2.Empty, error) {
	l := logic2.NewLoseFriendsLogic(ctx, s.svcCtx)
	return l.LoseFriends(in)
}

func (s *ContactServer) GetFriendsList(ctx context.Context, in *service2.GetFriendsListRequest) (*service2.GetFriendsListResponse, error) {
	l := logic2.NewGetFriendsListLogic(ctx, s.svcCtx)
	return l.GetFriendsList(in)
}
